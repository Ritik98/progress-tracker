{"version":3,"sources":["Components/Member.js","Components/Login.js","Components/Navbar.js","Components/Submit.js","Components/Plannedslots.js","Components/Date.js","Components/Actualslots.js","Components/dailyPlan.js","Components/pastRecord.js","Components/consistency.js","App.js","serviceWorker.js","index.js"],"names":["Member","props","state","dropdownOpen","toggle","bind","this","setState","name","Button","onClick","modalButton","ButtonDropdown","isOpen","DropdownToggle","id","caret","DropdownMenu","DropdownItem","profile","divider","dailyPlan","consistency","pastRecord","logout","Component","Login","handleLogin","event","preventDefault","username","value","password","login","Modal","openModal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","remember","color","Header","isModalOpen","toggleModal","className","Navbar","fixed","dark","NavbarBrand","src","logo","alt","title","height","width","Nav","navbar","NavItem","Submit","text","variant","size","block","PlannedSlots","head","tasks","data","Object","values","planned","i","config","length","push","PlanTask","md","placeholder","min","max","required","ShowTask","ThisDate","today","Date","month","toLocaleString","date","getDate","year","getFullYear","ActualSlots","Row","Core","Production","rows","DailyPlan","isActual","isPlanned","plannedData","cDate","timeInMilliSeconds","getTime","dateInSeconds","Math","floor","getHours","getMinutes","getSeconds","console","log","apiUrl","fetch","then","res","json","result","actual","output","submit","PastRecord","users","loading","axios","get","day","fullDate","getUsersData","columns","accessor","ConsistencyTable","core","prod","red","backgroundColor","yellow","green","style","Table","parseInt","Consistency","week","quarter","isConsistency","apiUrl2","apiUrl3","body","templogin","App","previous","isDaily","isRecords","alert","userName","passWord","Username","Password","corePlan","document","getElementById","prodPlan","coreActual","prodActual","notes","trim","raw","JSON","stringify","setData","raw2","api","myHeaders","Headers","append","method","headers","redirect","response","parse","catch","error","current","backgroundImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","img","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.60f22520.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport {Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nclass Member extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dropdownOpen : false,\r\n            \r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(){\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n          });\r\n    }\r\n    render(){\r\n        if(this.props.name===\"\")\r\n        return(<div>\r\n            <Button onClick={this.props.modalButton}>\r\n                Login\r\n            </Button>\r\n        </div>);\r\n        else\r\n        return(<ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle id=\"name\" caret>\r\n            {this.props.name}\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem onClick={this.props.profile}>Profile</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={this.props.dailyPlan}>Daily Progress</DropdownItem>\r\n              <DropdownItem onClick={this.props.consistency}>Consistency</DropdownItem>\r\n              <DropdownItem onClick={this.props.pastRecord}>Past Record</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={this.props.logout}>Log out</DropdownItem>\r\n            </DropdownMenu>\r\n          </ButtonDropdown>);\r\n    }\r\n}\r\nexport default Member;","import React, { Component } from 'react';\r\nimport {Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Label,Input} from 'reactstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    handleLogin(event) {\r\n\r\n        event.preventDefault();\r\n        //alert(\"Username: \" + this.username.value + \";\" +\"Passowrd: \"+ this.password.value + \" Remember: \" + this.remember.checked);\r\n        var username=this.username.value;\r\n        var password=this.password.value;\r\n        this.props.login(username,password);\r\n        this.props.modalButton();\r\n    \r\n      }\r\n    \r\n    render(){\r\n        return(<div>\r\n            <Modal isOpen={this.props.openModal} toggle={this.props.modalButton} >\r\n                <ModalHeader toggle={this.props.modalButton}>Login</ModalHeader>\r\n                <ModalBody>\r\n                <Form onSubmit={this.handleLogin} >\r\n                    <FormGroup>\r\n                    <Label htmlFor=\"username\">Username</Label>\r\n                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                        innerRef={(input) => this.username = input} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                        innerRef={(input) => this.password = input} />\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" name=\"remember\"\r\n                        innerRef={(input) => this.remember = input} />\r\n                            Remember me\r\n                    </Label>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\" >Login</Button>\r\n                </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>)\r\n    }\r\n}\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavItem} from 'reactstrap';\r\nimport Member from './Member';\r\nimport Login from './Login';\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false\r\n    }\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n   render() {\r\n    return (<div className=\"Header\" >\r\n      <Navbar fixed=\"top\" dark color=\"dark\" >\r\n        <div className=\"container\">\r\n          <NavbarBrand >\r\n            <div id=\"nav\">\r\n              <div id=\"logo\"><img src={this.props.logo} alt={this.props.title} height=\"70\" width=\"70\" /></div>\r\n              <div id=\"heading\">{this.props.title}</div></div></NavbarBrand>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <Member modalButton={this.toggleModal} name={this.props.name} pastRecord={this.props.pastRecord} consistency={this.props.consistency} logout={this.props.logout} dailyPlan={this.props.dailyPlan} profile={this.props.profile}/>\r\n            </NavItem>\r\n          </Nav>\r\n          <Login openModal={this.state.isModalOpen} modalButton={this.toggleModal}  login={this.props.login}/>\r\n        </div>\r\n      </Navbar>\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default Header;","import React,{Component } from 'react';\r\nimport '../App.css';\r\nimport { Button,Navbar} from 'reactstrap';\r\n\r\nclass Submit extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Footer\">\r\n                <Navbar fixed=\"bottom\" dark color=\"dark\" text=\"light\">\r\n                    <Button onClick={this.props.onClick} variant=\"dark\" size=\"lg\" block>Submit</Button>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Submit;","import React, { Component } from 'react';\r\nimport { Form,Label } from 'reactstrap';\r\n\r\nclass PlannedSlots extends Component{\r\n    render(){\r\n        var tasks=[];\r\n        var data=Object.values(this.props.data),head;\r\n        if(this.props.planned){\r\n            for(var i=0;i<this.props.config.length;i++){\r\n                tasks.push(\r\n                    <div><PlanTask name={this.props.config[i]} id={i}/><br/></div>\r\n                )\r\n            }\r\n            head=\"Let's plan our day\";\r\n        }\r\n        else{\r\n            for(i=0;i<this.props.config.length;i++){\r\n                tasks.push(\r\n                    <div><ShowTask name={this.props.config[i]} id={i} data={data[i]}/><br/></div>\r\n                )\r\n            }        \r\n            head=\"Your today's Plan\";\r\n        }\r\n        return (<Form className=\"formslots\">\r\n        <div className=\"col-12 col-md-10\">\r\n            <h1>{head}</h1>\r\n            <div className=\"inlineclass \">\r\n                <h5 className=\"col\">Task Name</h5>\r\n                <h5 className=\"col\">No. of Slots</h5>\r\n            </div><br/>\r\n            {tasks}\r\n        </div>\r\n    </Form>);\r\n    }\r\n}\r\n\r\nclass PlanTask extends Component{\r\n    render(){\r\n        var id=\"plan\"+this.props.id;\r\n        return(<div className=\"inlineclass pslots\">\r\n        <Label htmlFor=\"taskname\" md={4}>{this.props.name}</Label>\r\n        <input id={id} className=\"col\" type=\"number\" placeholder=\"Planned Slots\" min=\"1\" max=\"10\" required />\r\n    </div>);\r\n    }\r\n}\r\nclass ShowTask extends Component{\r\n    render(){\r\n        return(<div className=\"inlineclass pslots\">\r\n        <Label htmlFor=\"taskname\" md={6}>{this.props.name}</Label>\r\n        <Label htmlFor=\"taskslots\" md={6}>{this.props.data}</Label>\r\n    </div>);\r\n    }\r\n}\r\nexport default PlannedSlots;","import React from 'react';\r\nconst ThisDate = (props) => {\r\n  var today = new Date();\r\n  var month=today.toLocaleString('default', { month: 'long' });\r\n  var date = today.getDate();\r\n  var year = today.getFullYear();\r\n\r\n    return (<div className=\"Date\" >\r\n       {date+\" \"+ month +\", \"+year}\r\n</div>);\r\n}\r\n\r\nexport default ThisDate;","import React, { Component } from 'react';\r\nimport { Form, Row, Label } from 'reactstrap';\r\n\r\nclass ActualSlots extends Component {\r\n    \r\n    render() {\r\n        return (<div className=\"parentform\"><Form className=\"formslots \">\r\n            <div className=\"col-12 row offset-sm-3\">\r\n                <h1>Actual slots</h1>\r\n            </div>\r\n            <div className=\"col-12 col-md-10\">\r\n\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"taskname\" md={2}>Core</Label>\r\n                    <Label htmlFor=\"planslots\" md={2}>{this.props.data.Core}</Label>\r\n                    <input className=\"col\" id=\"coreActual\" placeholder=\"Slots Given\" type=\"number\" min=\"1\" max=\"10\" required />\r\n\r\n                </Row>\r\n\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"taskname\" md={2}>Production</Label>\r\n                    <Label htmlFor=\"taskslots\" md={2}>{this.props.data.Production}</Label>\r\n                    <input className=\"col\" id=\"prodActual\" placeholder=\"Slots Given\" type=\"number\" min=\"1\" max=\"10\" required />\r\n                </Row>\r\n\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"message\" md={2}>Notes </Label>\r\n                    <textarea id=\"notes\" rows=\"4\" className=\"col\" name=\"comment\"></textarea>\r\n                </Row>\r\n            </div>\r\n        </Form></div>);\r\n    }\r\n}\r\n\r\nexport default ActualSlots;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Submit from './Submit';\r\nimport PlannedSlots from './Plannedslots';\r\nimport ThisDate from './Date';\r\nimport ActualSlots from './Actualslots';\r\nclass DailyPlan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isActual: false,\r\n            data: {},\r\n            isPlanned:true,\r\n            plannedData:{}\r\n        }\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        var cDate = new Date();\r\n        var timeInMilliSeconds = cDate.getTime();\r\n        var timeInSeconds = Math.floor(timeInMilliSeconds / 1000);\r\n        var hrs = cDate.getHours();\r\n        var min = cDate.getMinutes();\r\n        var sec = cDate.getSeconds();\r\n        var hrsMinsInSecs = (hrs * 60 * 60) + (min * 60) + sec;\r\n        var dateInSeconds = timeInSeconds - hrsMinsInSecs-86400;\r\n        console.log(dateInSeconds);\r\n        var apiUrl = \"https://mj3a9u0swa.execute-api.ap-south-1.amazonaws.com/dev?UserName=\" + this.props.name + \"&Date=\" + dateInSeconds;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    if(result.isActual)\r\n                    this.setState({\r\n                        isActual: true,\r\n                        data: result.actual[0]\r\n                    });\r\n                    if(!result.isPlanned){\r\n                        this.setState({\r\n                            isPlanned:false,\r\n                            plannedData:result.planned[0]\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n    }\r\n    \r\n    onSubmit(){\r\n        var output=false;\r\n        output=this.props.submit(this.state.isActual);\r\n        if(output!==false){\r\n            console.log(data)\r\n            var data={\r\n                \"Core\":output[0],\r\n                \"Production\":output[1]\r\n            }   \r\n            this.setState({\r\n                isActual:false,\r\n                isPlanned:false,\r\n                plannedData:data\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        var actual,submit;\r\n        if(this.state.isActual)\r\n        actual=<ActualSlots data={this.state.data} />;\r\n        if(this.state.isPlanned)\r\n        submit=<Submit onClick={this.onSubmit}/>;\r\n        return (\r\n            <div>\r\n                <ThisDate />;\r\n                <div className=\"row \">\r\n                {actual}\r\n                    <div className=\"parentform\">\r\n                        <PlannedSlots config={[\"Core\", \"Production\"]} planned={this.state.isPlanned} data={this.state.plannedData}/>\r\n                    </div>\r\n                    {submit}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DailyPlan;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css';\r\nimport '../App.css';\r\nexport default class PastRecord extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      users: [],\r\n      loading: true\r\n    }\r\n  }\r\n  async getUsersData() {\r\n    const res = await axios.get('https://mj3a9u0swa.execute-api.ap-south-1.amazonaws.com/dev/dataanalysis?UserName=' + this.props.name);\r\n\r\n\r\n\r\n    for (var i = 0; i < res.data.length; i++) {\r\n      var date = new Date(res.data[i][\"Date\"] * 1000);\r\n      console.log(date);\r\n      var month=date.toLocaleString('default', { month: 'long' });\r\n      var day = date.getDate();\r\n      var year = date.getFullYear();\r\n      var fullDate = day + \" \" +month + \", \" + year;\r\n      res.data[i][\"Date\"] = fullDate\r\n    }\r\n    this.setState({ loading: false, users: res.data })\r\n  }\r\n  componentDidMount() {\r\n    this.getUsersData()\r\n  }\r\n  render() {\r\n    const columns = [{\r\n      Header: 'Date',\r\n      accessor: 'Date',\r\n    }\r\n      ,\r\n\r\n    {\r\n      Header: 'Production-planned',\r\n      accessor: 'Planned.Production',\r\n\r\n    }\r\n\r\n      ,\r\n    {\r\n      Header: 'production-actual',\r\n      accessor: 'Actual.Production',\r\n    },\r\n    {\r\n      Header: 'Core - planned',\r\n      accessor: 'Planned.Core',\r\n    },\r\n    {\r\n      Header: 'Core - actual',\r\n      accessor: 'Actual.Core',\r\n    },\r\n\r\n    {\r\n      Header: 'Notes',\r\n      accessor: 'Notes',\r\n    }\r\n\r\n    ]\r\n    return (\r\n      <ReactTable\r\n        data={this.state.users}\r\n        columns={columns}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Table } from 'reactstrap';\r\n\r\nclass ConsistencyTable extends Component {\r\n render() {\r\n   const red ={\r\n    backgroundColor: \"red\",\r\n    color:\"white\"\r\n   };\r\n   const yellow={\r\n    backgroundColor:\"yellow\",\r\n    color:\"black\"\r\n   };\r\n   const green={\r\n    backgroundColor:\"rgb(71, 253, 71)\",\r\n    color:\"black\"\r\n   };\r\n   var core,prod;\r\n   if(this.props.core>=90)\r\n      core=green;\r\n    else if(this.props.core>=75)\r\n      core=yellow;\r\n    else\r\n      core=red;\r\n\r\n      if(this.props.prod>=90)\r\n      prod=green;\r\n    else if(this.props.prod>=75)\r\n      prod=yellow;\r\n    else\r\n      prod=red;\r\n\r\n  return (\r\n      <div className=\"column\">\r\n        <h1 style={{ color: 'black' }} >{this.props.head}</h1>\r\n        <Table dark>\r\n          <thead>\r\n            <tr>\r\n              <th>Task</th>\r\n              <th>Consistency</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            <tr style={core} className=\"core\">\r\n              <td >Core</td>\r\n              <td>{parseInt(this.props.core)}</td>\r\n            </tr>\r\n            <tr style={prod} className=\"prod\">\r\n              <td >Production</td>\r\n              <td>{parseInt(this.props.prod)}</td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Consistency extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      week:{},\r\n      month:{},\r\n      quarter:{},\r\n      isConsistency:false\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    var apiUrl = this.props.apiUrl + \"?UserName=\" + this.props.name + \"&Date=\" + 7;\r\n    var apiUrl2 = this.props.apiUrl+\"?UserName=\"+ this.props.name+\"&Date=\"+28;\r\n\r\n    var apiUrl3 = this.props.apiUrl + \"?UserName=\" + this.props.name + \"&Date=\" + 84;\r\n        fetch(apiUrl)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                  this.setState({\r\n                    week:result.body\r\n                  })\r\n                    console.log(result);\r\n                }\r\n                \r\n            );\r\n            fetch(apiUrl2)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                  this.setState({\r\n                    month:result.body\r\n                  })\r\n                  console.log(result);\r\n                }\r\n                \r\n            );\r\n            fetch(apiUrl3)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                  this.setState({\r\n                    quarter:result.body,\r\n                    isConsistency: true\r\n                  })\r\n                  console.log(result);\r\n                }\r\n                \r\n            );\r\n  }\r\n  render() {\r\n    if(this.state.isConsistency)\r\n    return (\r\n      <div className=\"row\">\r\n        \r\n        <ConsistencyTable core={this.state.week.Core} prod={this.state.week.Production} head=\"Week\"/>\r\n        \r\n        <ConsistencyTable core={this.state.month.Core} prod={this.state.month.Production} head=\"Month\"/>\r\n        \r\n        <ConsistencyTable core={this.state.quarter.Core} prod={this.state.quarter.Production} head=\"Quarter\" />\r\n      </div>\r\n    );\r\n    else\r\n      return(<div>\r\n        \r\n      </div>);\r\n  }\r\n}\r\nexport default Consistency;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Navbar';\r\n\r\nimport DailyPlan from './Components/dailyPlan';\r\nimport PastRecord from './Components/pastRecord';\r\nimport Consistency from './Components/consistency';\r\n\r\nvar templogin = [\r\n  { \"Username\": \"HitJatin\", \"Password\": \"#Jatin23\" },\r\n  { \"Username\": \"Prarthana\", \"Password\": \"Prarthana\" },\r\n  { \"Username\": \"Ritik\", \"Password\": \"Ritik\" },\r\n  { \"Username\": \"Khyati\", \"Password\": \"Khyati\" },\r\n  { \"Username\": \"Aman\", \"Password\": \"Aman\" },\r\n  { \"Username\": \"Palak\", \"Password\": \"Palak\" },\r\n  { \"Username\": \"Mukesh\", \"Password\": \"Mukesh\" },\r\n]\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      previous: {},\r\n      isActual: false,\r\n      isPlanned: false,\r\n      isDaily: false,\r\n      isConsistency: false,\r\n      isRecords: false\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    this.dailyPlan = this.dailyPlan.bind(this);\r\n    this.consistency = this.consistency.bind(this);\r\n    this.pastRecord = this.pastRecord.bind(this);\r\n  }\r\n\r\n  profile() {\r\n    alert(\"method in construction\");\r\n  }\r\n\r\n  dailyPlan() {\r\n    this.setState({\r\n      isDaily: true,\r\n      isConsistency: false,\r\n      isRecords: false\r\n    });\r\n  }\r\n  consistency() {\r\n    this.setState({\r\n      isDaily: false,\r\n      isConsistency: true,\r\n      isRecords: false\r\n    });\r\n  }\r\n  pastRecord() {\r\n    this.setState({\r\n      isDaily: false,\r\n      isConsistency: false,\r\n      isRecords: true\r\n    });\r\n  }\r\n  logout() {\r\n    this.setState({\r\n      isDaily: true,\r\n      isConsistency: false,\r\n      isRecords: false,\r\n      name: \"\"\r\n    });\r\n  }\r\n\r\n\r\n\r\n  login(userName, passWord) {\r\n    var i, check = 0;\r\n    for (i = 0; i < templogin.length; i++) {\r\n      if (templogin[i].Username === userName && templogin[i].Password === passWord) {\r\n        this.setState({\r\n          name: userName,\r\n          isDaily: true\r\n        });\r\n\r\n        check = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (check === 0)\r\n      alert(\"Incorrect UserName or Password \");\r\n  }\r\n\r\n  submit(actual) {\r\n    var cDate = new Date();\r\n    var timeInMilliSeconds = cDate.getTime();\r\n    var timeInSeconds = Math.floor(timeInMilliSeconds / 1000);\r\n    var hrs = cDate.getHours();\r\n    var min = cDate.getMinutes();\r\n    var sec = cDate.getSeconds();\r\n    var hrsMinsInSecs = (hrs * 60 * 60) + (min * 60) + sec;\r\n    var dateInSeconds = timeInSeconds - hrsMinsInSecs;\r\n    var corePlan = document.getElementById(\"plan0\").value;\r\n    var prodPlan = document.getElementById(\"plan1\").value;\r\n    if (corePlan === \"\" || prodPlan === \"\") {\r\n      alert(\"Please enter all the details\");\r\n      return false;\r\n    }\r\n    else {\r\n      if (actual) {\r\n        var coreActual = document.getElementById(\"coreActual\").value;\r\n        var prodActual = document.getElementById(\"prodActual\").value;\r\n        var notes = document.getElementById(\"notes\").value.trim();\r\n        if (coreActual === \"\" || prodActual === \"\" || notes === \"\") {\r\n          alert(\"Please enter all the details\");\r\n          return false;\r\n        }\r\n        else {\r\n          var raw = JSON.stringify({\r\n            \"UserName\": this.state.name,\r\n            \"Date\": dateInSeconds - 86400,\r\n            \"Actual\": {\r\n              \"Core\": coreActual,\r\n              \"Production\": prodActual\r\n            },\r\n            \"Notes\": notes\r\n\r\n          });\r\n          var api = \"https://mj3a9u0swa.execute-api.ap-south-1.amazonaws.com/dev/update\";\r\n          this.setData(raw, api);\r\n        }\r\n      }\r\n      var raw2 = JSON.stringify({\r\n        \"UserName\": this.state.name,\r\n        \"Date\": dateInSeconds,\r\n        \"Name\": this.state.name,\r\n        \"Planned\": {\r\n          \"Core\": corePlan,\r\n          \"Production\": prodPlan\r\n        }\r\n      });\r\n      var api2 = \"https://mj3a9u0swa.execute-api.ap-south-1.amazonaws.com/dev\"\r\n      this.setData(raw2, api2)\r\n      var data = [corePlan, prodPlan];\r\n      return data;\r\n    }\r\n  }\r\n\r\n  setData(raw, api) {\r\n    // instantiate a headers object\r\n    var myHeaders = new Headers();\r\n    // add content type header to object\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    // using built in JSON utility package turn object to string and store in a variable\r\n    // create a JSON object with parameters for API call and store in a variable\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n    // make API call with parameters and use promises to get response\r\n    fetch(api, requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => console.log(JSON.parse(result).body))\r\n      .catch(error => console.log('error', error));\r\n  }\r\n\r\n  render() {\r\n    var current;\r\n    if (this.state.name !== \"\") {\r\n      if (this.state.isDaily)\r\n        current = <DailyPlan name={this.state.name} submit={this.submit} />;\r\n      else if (this.state.isConsistency)\r\n        current = <Consistency name={this.state.name} apiUrl=\"https://mj3a9u0swa.execute-api.ap-south-1.amazonaws.com/dev/dataanalysis/consistency\" />;\r\n      else if (this.state.isRecords)\r\n        current = <PastRecord name={this.state.name} />;\r\n      else\r\n        alert(\"There is some error with components\");\r\n    }\r\n\r\n    document.body.style.backgroundImage = \"url('./bgimage.jpg')\";\r\n\r\n\r\n\r\n\r\n    return (<div className=\"App\" >\r\n      <Header logo='./skillpill.png' title=\"Progress Tracker\" name={this.state.name} login={this.login} pastRecord={this.pastRecord} consistency={this.consistency} logout={this.logout} dailyPlan={this.dailyPlan} profile={this.profile} />\r\n      {current}\r\n    </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App img=\"./bgimage.jpg\"/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}